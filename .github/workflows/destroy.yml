name: Terraform Destroy Workflow
on:
  workflow_dispatch:  # Permite ejecución manual

jobs:
  destroy:
    name: Destroy Infrastructure with Terraform
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout del código fuente
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Instalar jq para procesamiento JSON
      - name: Install jq
        run: sudo apt-get install jq -y

      # 3. Configurar Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.4

      # 4. Configurar credenciales AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # 5. Inicializar Terraform
      - name: Initialize Terraform
        run: terraform init

      # 6. Ejecutar Terraform Destroy
      - name: Terraform Destroy
        run: terraform destroy -auto-approve -force

      # 7. Eliminar Bucket S3 con manejo de versiones
      - name: Delete S3 Bucket
        env:
          BUCKET_NAME: "pin-grupo-4"
        run: |
          if aws s3api head-bucket --bucket $BUCKET_NAME 2>/dev/null; then
            echo "Eliminando objetos versionados..."
            
            # Eliminar versiones de objetos
            aws s3api list-object-versions --bucket $BUCKET_NAME --query "Versions[].[Key,VersionId]" --output json | \
            jq -r '.[] | @base64' | while read -r item; do
              _jq() {
                echo "$item" | base64 --decode | jq -r "$1"
              }
              KEY=$(_jq '.[0]')
              VERSION_ID=$(_jq '.[1]')
              if [ -n "$KEY" ] && [ -n "$VERSION_ID" ]; then
                echo "Eliminando objeto: $KEY (Version: $VERSION_ID)"
                aws s3api delete-object --bucket $BUCKET_NAME --key "$KEY" --version-id "$VERSION_ID"
              fi
            done

            # Eliminar marcadores de eliminación
            echo "Eliminando marcadores de eliminación..."
            aws s3api list-object-versions --bucket $BUCKET_NAME --query "DeleteMarkers[].[Key,VersionId]" --output json | \
            jq -r '.[] | @base64' | while read -r item; do
              _jq() {
                echo "$item" | base64 --decode | jq -r "$1"
              }
              KEY=$(_jq '.[0]')
              VERSION_ID=$(_jq '.[1]')
              if [ -n "$KEY" ] && [ -n "$VERSION_ID" ]; then
                echo "Eliminando marcador: $KEY (Version: $VERSION_ID)"
                aws s3api delete-object --bucket $BUCKET_NAME --key "$KEY" --version-id "$VERSION_ID"
              fi
            done

            # Eliminar objetos no versionados
            echo "Vaciando bucket..."
            aws s3 rm s3://$BUCKET_NAME --recursive --quiet || true

            # Eliminar bucket
            echo "Eliminando bucket..."
            aws s3api delete-bucket --bucket $BUCKET_NAME
            echo "✅ Bucket eliminado con éxito"
          else
            echo "⚠️ El bucket no existe"
          fi